# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
#  push:
#    branches: [ "main" ] 
#    paths:
#    - '**.ps1'
 workflow_dispatch:
    inputs:
      releaseVersion:
        required: true
        type: string
      buildVersion:
        required: true
        type: string
        default: '23.11.28.08201'
      startDepolyment:
        type: choice
        description: start Deploy immediately
        options: 
        - yes
        - no
      environment:
        type: environment

jobs: 
  deploy:
    runs-on: self-hosted
    environment: SIT
    env: 
      varSIT: "test"
    steps:
    
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
       # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Display dotnet version 
      run: dotnet --version
    - name: env var
      run: |
        echo "local jobs variable $env:varSIT"
        echo "repository variable : ${{ vars.OILVERSION }}"
    - name: Get inputs
      run: echo "${{ github.event.inputs.startDepolyment }}${{ github.event.inputs.buildVersion}}"

    - name: Generate output
      id: color-selector
      run: echo "SELECTED_COLOR=green" >> $env:GITHUB_OUTPUT
    - name: check output
      env:
          SELECTED_COLOR: ${{ steps.color-selector.outputs.SELECTED_COLOR }}   
      run: echo "The selected color is $env:SELECTED_COLOR"

    - name: ifOutputeq
      run: |
            if ([[ "${{ steps.color-selector.outputs.SELECTED_COLOR }}"  == "green" ]]); then exit 0; else exit 1; fi
    - name: Falt
      id  : faultstep
      run: |
           .\ConsoleAppNew\ConsoleApp1\faultfile.ps1
    - name: check faultcode
      env:
          FAULT_CODE: ${{ steps.faultstep.outputs.ERRCODE }}   
      run: echo "The error code is $env:FAULT_CODE"


    - name: Falt2
      id  : faultstep2
      run: |
           .\ConsoleAppNew\ConsoleApp1\faultrewrite.ps1
    - name: check faultcode rewrite
      env:
          FAULT_CODE: ${{ steps.faultstep2.outputs.ERRCODE }}   
      run: echo "The NEW error code is $env:FAULT_CODE"

    - name: PS script ProgramFiles
      run: |
           ping 198.18.100.6
#           ${env:ProgramFiles(x86)}
#    - name: Deploy via PS
#      id  : deployStep
#      run: |
#           .\ConsoleAppNew\ConsoleApp1\DeployScript.ps1
    - name: PS script whoami
      run: |
        whoami
        echo $env:GITHUB_WORKSPACE
